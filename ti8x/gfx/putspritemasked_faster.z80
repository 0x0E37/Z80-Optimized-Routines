;NOTE: This routine may be under a different License.

;Masked Sprite routine
;This is optimized by Zeda from a routine by Fallen Ghost, as a response to Kerm's routine.
;NOTE: Uses shadow registers!

PutMask:
;Inputs:
;   a = X coordinate
;   l = Y coordinate
;   b= height of sprite
;   ix = sprite address
;   ix+b = mask address (same length as sprite, please)
;
;Outputs:
;   Mask and then sprite displayed at specified location on the graph buffer
;
;Destroys:
;   AF, BC, DE, HL, IX, DE', HL' (shadow registers)
;
;Improvements from Kerm's DCS version:
;   -Permits any height sprite
;   -8 bytes less
;   -Faster
  ld e,l
  ld h,0
  ld d,h
  add hl,hl
  add hl,de
  add hl,hl
  add hl,hl
  ld e,a
  and 7
  ld c,a
  xor e  ;essentially gets E with the bottom 3 bits reset
#if (plotSScreen&255) = 64
  inc a
  rra
  rra
  rra
  ld e,a
  ld d,plotSScreen>>8
#else
  rra
  rra
  rra
  ld e,a
  add hl,de
  ld de,plotSScreen
#endif
  add hl,de

   ld a,b
   exx
   add a,ixl
   ld l,a
   ld a,ixh
   adc a,0
   ld h,a
   exx
putMaskLoop1:
  exx
  ld      d,0FFh
  ld      e,(hl)
  inc hl
  exx
  xor a
   ld   d,(ix)
   ld   e,a
   sub c
   jr   z,putMaskSkip1
putMaskLoop2:
  exx
  rr e
  rr d
  exx
   srl   d
   rr   e
   sub -1
   jr   nz,putMaskLoop2
putMaskSkip1:
   ld   a,(hl)
   exx
   and e
   exx
   or   d
   ld   (hl),a
   inc   hl
   ld   a,(hl)
   exx
   and     d
   exx
   or   e
   ld   (hl),a
   ld   de,00Bh
   add   hl,de
   inc   ix
   djnz   putMaskLoop1
   ret
